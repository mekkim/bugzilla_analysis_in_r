{"name":"Bugzilla analysis in r","tagline":"Analyzing the Mozilla Bugzilla database using R","body":"Analyzing Mozilla's Bugzilla Database Using R\t\r\n\r\nÂ© 2015 by Mekki MacAulay, mekki@mekki.ca http://mekki.ca http://twitter.com/mekki\t\t\t\r\nSome rights reserved.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\nThis program is free and open source software. The author licenses it\t\r\nto you under the terms of the GNU General Public License (GPL), as \t\t\r\npublished by the Free Software Foundation, either version 3, or\t\t\t\r\n(at your option) any later version (GPLv3+).\t\t\t\t\t\t\t\r\n\r\nThere is NO WARRANTY for this software, express or implied, including \t\r\nthe implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR \t\r\nPURPOSE. See the GNU General Public License for more details.\t\t\t\r\n\r\nFor the full text of the GNU General Public License, please visit\t\t\r\nhttp://gnu.org/licenses/\t\t\t\t\t\t\t\t\t\t\t\t\t\r\nShould you require an alternative licensing arrangement for this \t\t\r\nsoftware, please contact the author.\t                                \r\n\r\n\r\nTo execute the script file in R, use the following commands:\r\n\r\nsetwd('<FULL PATH TO THIS SCRIPT FILE>');\r\nsource('<NAME OF THIS FILE>.r', echo=TRUE, max.deparse.length=100000, keep.source=TRUE, verbose=TRUE);\r\n(These source() parameters ensure that the R shell outputs the script commands and responses. Otherwise, they're hidden by default.)\r\n\r\nOr, from the command prompt directly as follows (assuming R binary is in the PATH environment variable):\r\ncd <FULL PATH TO THIS SCRIPT FILE>\r\nR CMD BATCH <NAME OF THIS FILE>.r\r\nCAT <NAME OF THIS FILE>.Rout\r\n(The CAT is necessary because by default R output writes to file, not command prompt)\r\n\r\n\r\nThis script depends on the presence of an updated R installation along with a\r\nMySQL installation containing the Mozilla Bugzilla database and a\r\nPHP utility script for domain name parsing\r\n\r\nThe following sections describe the process for installing these necesities\r\n\r\nINSTALL MYSQL SERVER\r\n\r\nVisit: https://dev.mysql.com/downloads/windows/installer/5.5.html\r\n\r\nDownload the MySQL MSI installer for Windows\r\n(Version 5.5.44 will do just fine - Later versions have the annoying Oracle installer that makes things more complicated)\r\n\r\nRun the installer as administrator and complete the MySQL install with default settings (or minor tweaks if you wish)\r\nDuring install, set the  default username to \"root\" and password to \"password\" in the configuration\r\nDefault host will be \"localhost\" and default port will be \"3306\"\r\n\r\nTest connection to ensure it is working with the MySQL Workbench client that is also installed with the package\r\nOnce connected with the MySQL Workbench client, under the menu \"Server\", select \"Options File\"\r\nClick on the \"Networking\" tab\r\nCheck the box for \"max_allowed_packet\" and set its value to \"1G\" or a suitable large number\r\nClick \"Apply\" and then restart the server\r\n(In the Navigator pane, click on \"Startup / Shutdown\" then click \"Stop Server\" in the main window, followed by \"Start Server)\r\n\r\n\r\nRESTORE BUGZILLA DATABASE (Current version includes data until end of 2012)\r\n\r\nDecompress/untar the Bugzilla database.  The result is a MySQL-formatted dumpfile with a .sql extension\r\nI'll assume that the file name is \"2013_01_sanitized_bugzilla.sql\". If it's not, change the name in the commands below.\r\nThis dumpfile only works with MySQl databases.  It cannot be restored to other databases such as SQLite, PostGRESQL, MSSQL, etc.\r\nIt is also sufficiently complex that scripts cannot readily be used to convert it to a dumpfile of a different format\r\n\r\nFrom the command prompt, issue the following 3 commands one by one:\r\n\r\nmysql -uroot -ppassword -e 'DROP DATABASE bugs;'\r\nmysql -uroot -ppassword -e 'CREATE DATABASE bugs;'\r\nmysql -uroot -ppassword bugs < 2013_01_sanitized_bugzilla.sql\r\n\r\nThe result will be a database named \"bugs\" on the MySQL server, filled with the Bugzilla data\r\n\r\nThe \"bugs\" database will be kept as our \"pristine\" copy of the data so that we don't have to restore it from\r\nthe dumpfile if something goes wrong. This step isn't strictly necessary, but it never hurts to be safe.\r\nWe'll only work on a duplicate of the \"bugs\" database that we can always recreate from the pristine copy if something breaks\r\n\r\nTo create a duplicate of the \"bugs\" database, which we will call \"working\",\r\nfrom the command prompt, issue the following command:\r\n\r\nmysqldbcopy --source=root:password@localhost --destination=root:password@localhost bugs:working\r\n\r\n\r\nINSTALL AND CONFIGURE R (Statistical package) or RRO (Revolution R Open enhanced R distribution)\r\n\r\nVisit: http://cran.utstat.utoronto.ca/bin/windows/base/\r\n\r\nDownload the installer for the latest version for Windows (32/64 bit)\r\n\r\nAlternatively, visit: http://mran.revolutionanalytics.com/download/download\r\n\r\nDownload the installer for the latest version of Revolution R Open, RRO, an alternative R distribution\r\nprimarily developed by Revolution Analytics (http://revolutionanalytics.com/), which is also open source\r\nRevolution Analytics maintains a Managed R Archive Network (MRAN) that mirrors the base CRAN with optimizations\r\n\r\nThis script might execute slightly faster with RRO vs base R, but no large changes have been noted yet.\r\n\r\nYou are encouraged to use an R or RRO version of at least 3.2.x as versions 3.1.3 and earlier execute this script significantly\r\nslower (~45% speed decrease), likely due to different memory heap management discussed here:\r\nhttp://cran.r-project.org/src/base/NEWS\r\n\r\nRun the installer (either one) as administrator and complete the R install with default settings (or minor tweaks if you wish)\r\n\r\nCreate a shortcut to R x64 X.X.X on the desktop (or suitable place - the installers offer to create one for you)\r\nRight-click on the shortcut and choose \"Properties\"\r\nChange the \"Start in:\" field to the location of this script file\r\n(Currently: \"C:\\Users\\atriou\\Dropbox\\Classes and York Stuff\\Dissertation and brainstorming\\Scripts\\R\")\r\nThat will ensure that R can find this script when executed from within the R shell\r\n\r\nInstall additional packages from the package manager including at least the following:\r\n\r\nchron\r\ncurl\r\ndata.table\r\nDBI\r\ndplyr\r\nDT\r\nFactoMineR\r\nFSA: https://www.rforge.net/FSA/Installation.html -> Not needed with dplyr::filter, which is much faster\r\nggplot2\r\ngoogleVis https://cran.r-project.org/web/packages/googleVis/index.html -> Not currently used. Seems buggy.\r\ngraphics\r\ngWidgets\r\ngWidgetsRGtk2\r\nhighr\r\nlongitudinalData\r\nlubridate\r\nPaneldata\r\npanelaggregation\r\npanelAR\r\nplyr\r\nRcmdr (and its many plugins)\r\nRCurl\r\nrggobi\r\nRGraphics\r\nRGtk2\r\nRGtk2Extras\r\nRJDBC\r\nRMySQL\r\nRODBC\r\nRODBCext\r\nRQDA\r\nsqldf\r\nsqlutils\r\nstargazer\r\ntidyr\r\ntimeDate\r\nutils\r\nxkcd\r\nxlsx\r\nzipcode\r\n...\r\nand all of the recursive dependencies of these listed packages (should do it automatically for you)\r\nThis might take a while...\r\n\r\n\r\nINSTALL AND CONFIGURE PHP\r\n\r\nDownload the latest zip installer package from http://windows.php.net/download/\r\nThis version uses PHP 5.6.14, which was current release version at the time\r\n\r\nExtract the contents of the zip file to whatever directory you want to keep PHP in\r\nI chose \"C:\\php\"\r\n\r\nCreate a new file called \"php.ini\" in the PHP directory\r\nEdit the php.ini file to include the following lines:\r\n\r\nextension=php_curl.dll\r\nextension=php_openssl.dll\r\nextension=php_intl.dll\r\nextension=php_mbstring.dll\r\nmemory_limit = 2048M\r\n\r\nOpen the ext director in the PHP directory\r\nCopy php_curl.dll, php_openssl.dll, php_intl.dll, and php_mbstring.dll to the root PHP directory\r\n\r\nChange the system PATH environment variable to include \"C:\\php\" or whatever directory you chose for the PHP install\r\n\r\nDownload the latest version of PHP Composer from: https://getcomposer.org/Composer-Setup.exe\r\nRun the installer with default settings\r\n\r\nFollow the instructions here to install \"PHP Domain Parser\" using Composer: https://github.com/jeremykendall/php-domain-parser/blob/develop/README.md\r\n\r\nThe small php program \"domainparser.php\" is provided and uses in the installed library\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}